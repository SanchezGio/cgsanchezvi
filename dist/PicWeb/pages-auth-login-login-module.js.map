{"version":3,"sources":["./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-auth-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { BaseFormUser } from '@shared/utils/base-form-user';\r\nimport { MainServiceService } from 'src/app/Services/main-service.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthenticationRequest } from 'src/app/shared/models/AuthenticationRequest';\r\nimport { LoginActivate } from 'src/app/shared/guards/login-active.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  hide = true;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private mainSvc: MainServiceService,\r\n    private router: Router,\r\n    public loginForm: BaseFormUser,\r\n    private auth: LoginActivate\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm.baseForm.get('role').setValidators(null);\r\n    this.loginForm.baseForm.get('role').updateValueAndValidity();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onLogin(): void {\r\n    if (this.loginForm.baseForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let data: AuthenticationRequest = {\r\n      username: String(this.loginForm.baseForm.get('username').value),\r\n      password: String(this.loginForm.baseForm.get('password').value),\r\n    }\r\n    //const formValue = this.loginForm.baseForm.value;\r\n    debugger\r\n    this.subscription.add(\r\n      \r\n      this.mainSvc.executeMethod('Auth', 'Login',data,false).subscribe((rta) => {\r\n        debugger\r\n      if (rta.error===0) {\r\n        this.auth.login(rta.values.token);\r\n        this.router.navigate([\"/home\"]);\r\n      }else {\r\n        this.mainSvc.openSnackBar(\"Error\",rta.message);\r\n      } \r\n      })\r\n    );\r\n  }\r\n\r\n  checkField(field: string): boolean {\r\n    return this.loginForm.isValidField(field);\r\n  }\r\n}\r\n\r\n","<div class=\"login-form\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <h1>LOGIN</h1>\r\n      <form [formGroup]=\"loginForm.baseForm\" (ngSubmit)=\"onLogin()\">\r\n        <mat-form-field class=\"full-width-input\">\r\n          <input\r\n            text=\"text\"\r\n            formControlName=\"username\"\r\n            matInput\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"checkField('username')\">\r\n            {{ loginForm.errorMessage }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"full-width-input separator\">\r\n          <input\r\n            [type]=\"hide ? 'password' : 'text'\"\r\n            formControlName=\"password\"\r\n            matInput\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\">\r\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"checkField('password')\">\r\n            {{ loginForm.errorMessage }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button\r\n          [disabled]=\"loginForm.baseForm.invalid\"\r\n          type=\"submit\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { MaterialModule } from '@app/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\nexport class LoginModule {}\r\n"],"sourceRoot":"webpack:///"}